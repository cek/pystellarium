
# Automatically generated by generate.py -- do not edit.
class StellariumActions:
    def __init__(self, parent):
        self._parent = parent
        self._actionId = '-2'
        self._actionValues = {}
    def _update(self):
        s = self._parent.getStatus(actionId=self._actionId)
        ac = s['actionChanges']
        self._actionId = ac['id']
        ch = ac['changes']
        for change in ch.items():
            self._actionValues[change[0]] = change[1]
    def _action(self, action):
        return self._parent._post('stelaction/do', 'id', action)
    def _getValue(self, id):
        self._update()
        return self._actionValues[id]
    def _setValue(self, id):
        self._action(id)

    @property
    def showNovaeConfigDialog(self):
        """Bright Novae configuration window"""
        return self._getValue('actionShow_Novae_ConfigDialog')
    @showNovaeConfigDialog.setter
    def showNovaeConfigDialog(self, value):
        self._setValue('actionShow_Novae_ConfigDialog')
    def increaseTimeSpeed(self):
        """Increase time speed"""
        return self._action('actionIncrease_Time_Speed')
    def decreaseTimeSpeed(self):
        """Decrease time speed"""
        return self._action('actionDecrease_Time_Speed')
    def increaseTimeSpeedLess(self):
        """Increase time speed (a little)"""
        return self._action('actionIncrease_Time_Speed_Less')
    def decreaseTimeSpeedLess(self):
        """Decrease time speed (a little)"""
        return self._action('actionDecrease_Time_Speed_Less')
    def setRealTimeSpeed(self):
        """Set normal time rate"""
        return self._action('actionSet_Real_Time_Speed')
    def setTimeRateZero(self):
        """Set time rate to zero"""
        return self._action('actionSet_Time_Rate_Zero')
    def setTimeReverse(self):
        """Set reverse time direction"""
        return self._action('actionSet_Time_Reverse')
    def returnToCurrentTime(self):
        """Set time to now"""
        return self._action('actionReturn_To_Current_Time')
    def addSolarMinute(self):
        """Add 1 solar minute"""
        return self._action('actionAdd_Solar_Minute')
    def addSolarHour(self):
        """Add 1 solar hour"""
        return self._action('actionAdd_Solar_Hour')
    def addSolarDay(self):
        """Add 1 solar day"""
        return self._action('actionAdd_Solar_Day')
    def addSolarWeek(self):
        """Add 7 solar days"""
        return self._action('actionAdd_Solar_Week')
    def subtractSolarMinute(self):
        """Subtract 1 solar minute"""
        return self._action('actionSubtract_Solar_Minute')
    def subtractSolarHour(self):
        """Subtract 1 solar hour"""
        return self._action('actionSubtract_Solar_Hour')
    def subtractSolarDay(self):
        """Subtract 1 solar day"""
        return self._action('actionSubtract_Solar_Day')
    def subtractSolarWeek(self):
        """Subtract 7 solar days"""
        return self._action('actionSubtract_Solar_Week')
    def addSiderealDay(self):
        """Add 1 sidereal day"""
        return self._action('actionAdd_Sidereal_Day')
    def addSiderealWeek(self):
        """Add 7 sidereal days"""
        return self._action('actionAdd_Sidereal_Week')
    def addSiderealYear(self):
        """Add 1 sidereal year"""
        return self._action('actionAdd_Sidereal_Year')
    def addSiderealCentury(self):
        """Add 100 sidereal years"""
        return self._action('actionAdd_Sidereal_Century')
    def addSynodicMonth(self):
        """Add 1 synodic month"""
        return self._action('actionAdd_Synodic_Month')
    def addSaros(self):
        """Add 1 saros"""
        return self._action('actionAdd_Saros')
    def addDraconicMonth(self):
        """Add 1 draconic month"""
        return self._action('actionAdd_Draconic_Month')
    def addDraconicYear(self):
        """Add 1 draconic year"""
        return self._action('actionAdd_Draconic_Year')
    def addAnomalisticMonth(self):
        """Add 1 anomalistic month"""
        return self._action('actionAdd_Anomalistic_Month')
    def addAnomalisticYear(self):
        """Add 1 anomalistic year"""
        return self._action('actionAdd_Anomalistic_Year')
    def addAnomalisticCentury(self):
        """Add 100 anomalistic years"""
        return self._action('actionAdd_Anomalistic_Century')
    def addMeanTropicalMonth(self):
        """Add 1 mean tropical month"""
        return self._action('actionAdd_Mean_Tropical_Month')
    def addMeanTropicalYear(self):
        """Add 1 mean tropical year"""
        return self._action('actionAdd_Mean_Tropical_Year')
    def addMeanTropicalCentury(self):
        """Add 100 mean tropical years"""
        return self._action('actionAdd_Mean_Tropical_Century')
    def addTropicalYear(self):
        """Add 1 tropical year"""
        return self._action('actionAdd_Tropical_Year')
    def addJulianYear(self):
        """Add 1 Julian year"""
        return self._action('actionAdd_Julian_Year')
    def addJulianCentury(self):
        """Add 1 Julian century"""
        return self._action('actionAdd_Julian_Century')
    def addGaussianYear(self):
        """Add 1 Gaussian year"""
        return self._action('actionAdd_Gaussian_Year')
    def addCalendricMonth(self):
        """Add 1 calendric month"""
        return self._action('actionAdd_Calendric_Month')
    def subtractSiderealDay(self):
        """Subtract 1 sidereal day"""
        return self._action('actionSubtract_Sidereal_Day')
    def subtractSiderealWeek(self):
        """Subtract 7 sidereal days"""
        return self._action('actionSubtract_Sidereal_Week')
    def subtractSiderealYear(self):
        """Subtract 1 sidereal year"""
        return self._action('actionSubtract_Sidereal_Year')
    def subtractSiderealCentury(self):
        """Subtract 100 sidereal years"""
        return self._action('actionSubtract_Sidereal_Century')
    def subtractSynodicMonth(self):
        """Subtract 1 synodic month"""
        return self._action('actionSubtract_Synodic_Month')
    def subtractSaros(self):
        """Subtract 1 saros"""
        return self._action('actionSubtract_Saros')
    def subtractDraconicMonth(self):
        """Subtract 1 draconic month"""
        return self._action('actionSubtract_Draconic_Month')
    def subtractDraconicYear(self):
        """Subtract 1 draconic year"""
        return self._action('actionSubtract_Draconic_Year')
    def subtractAnomalisticMonth(self):
        """Subtract 1 anomalistic month"""
        return self._action('actionSubtract_Anomalistic_Month')
    def subtractAnomalisticYear(self):
        """Subtract 1 anomalistic year"""
        return self._action('actionSubtract_Anomalistic_Year')
    def subtractAnomalisticCentury(self):
        """Subtract 100 anomalistic years"""
        return self._action('actionSubtract_Anomalistic_Century')
    def subtractMeanTropicalMonth(self):
        """Subtract 1 mean tropical month"""
        return self._action('actionSubtract_Mean_Tropical_Month')
    def subtractMeanTropicalYear(self):
        """Subtract 1 mean tropical year"""
        return self._action('actionSubtract_Mean_Tropical_Year')
    def subtractMeanTropicalCentury(self):
        """Subtract 100 mean tropical years"""
        return self._action('actionSubtract_Mean_Tropical_Century')
    def subtractTropicalYear(self):
        """Subtract 1 tropical year"""
        return self._action('actionSubtract_Tropical_Year')
    def subtractJulianYear(self):
        """Subtract 1 Julian year"""
        return self._action('actionSubtract_Julian_Year')
    def subtractJulianCentury(self):
        """Subtract 1 Julian century"""
        return self._action('actionSubtract_Julian_Century')
    def subtractGaussianYear(self):
        """Subtract 1 Gaussian year"""
        return self._action('actionSubtract_Gaussian_Year')
    def subtractCalendricMonth(self):
        """Subtract 1 calendric month"""
        return self._action('actionSubtract_Calendric_Month')
    def increaseScriptSpeed(self):
        """Speed up the script execution rate"""
        return self._action('actionIncrease_Script_Speed')
    def decreaseScriptSpeed(self):
        """Slow down the script execution rate"""
        return self._action('actionDecrease_Script_Speed')
    def setRealScriptSpeed(self):
        """Set the normal script execution rate"""
        return self._action('actionSet_Real_Script_Speed')
    def stopScript(self):
        """Stop script execution"""
        return self._action('actionStop_Script')
    @property
    def showHipsSurveys(self):
        """Toggle Hierarchical Progressive Surveys"""
        return self._getValue('actionShow_Hips_Surveys')
    @showHipsSurveys.setter
    def showHipsSurveys(self, value):
        self._setValue('actionShow_Hips_Surveys')
    @property
    def showPlanets(self):
        """Planets"""
        return self._getValue('actionShow_Planets')
    @showPlanets.setter
    def showPlanets(self, value):
        self._setValue('actionShow_Planets')
    @property
    def showPlanetsLabels(self):
        """Planet labels"""
        return self._getValue('actionShow_Planets_Labels')
    @showPlanetsLabels.setter
    def showPlanetsLabels(self, value):
        self._setValue('actionShow_Planets_Labels')
    @property
    def showPlanetsOrbits(self):
        """Planet orbits"""
        return self._getValue('actionShow_Planets_Orbits')
    @showPlanetsOrbits.setter
    def showPlanetsOrbits(self, value):
        self._setValue('actionShow_Planets_Orbits')
    @property
    def showPlanetsTrails(self):
        """Planet trails"""
        return self._getValue('actionShow_Planets_Trails')
    @showPlanetsTrails.setter
    def showPlanetsTrails(self, value):
        self._setValue('actionShow_Planets_Trails')
    def showPlanetsTrailsReset(self):
        """Planet trails reset"""
        return self._action('actionShow_Planets_Trails_Reset')
    @property
    def showPlanetsHints(self):
        """Planet markers"""
        return self._getValue('actionShow_Planets_Hints')
    @showPlanetsHints.setter
    def showPlanetsHints(self, value):
        self._setValue('actionShow_Planets_Hints')
    @property
    def showPlanetsPointers(self):
        """Planet selection marker"""
        return self._getValue('actionShow_Planets_Pointers')
    @showPlanetsPointers.setter
    def showPlanetsPointers(self, value):
        self._setValue('actionShow_Planets_Pointers')
    @property
    def showPlanetsEnlargeMoon(self):
        """Enlarge Moon"""
        return self._getValue('actionShow_Planets_EnlargeMoon')
    @showPlanetsEnlargeMoon.setter
    def showPlanetsEnlargeMoon(self, value):
        self._setValue('actionShow_Planets_EnlargeMoon')
    @property
    def showPlanetsEnlargeMinor(self):
        """Enlarge minor bodies"""
        return self._getValue('actionShow_Planets_EnlargeMinor')
    @showPlanetsEnlargeMinor.setter
    def showPlanetsEnlargeMinor(self, value):
        self._setValue('actionShow_Planets_EnlargeMinor')
    @property
    def showPlanetsEnlargePlanets(self):
        """Enlarge Planets"""
        return self._getValue('actionShow_Planets_EnlargePlanets')
    @showPlanetsEnlargePlanets.setter
    def showPlanetsEnlargePlanets(self, value):
        self._setValue('actionShow_Planets_EnlargePlanets')
    @property
    def showPlanetsEnlargeSun(self):
        """Enlarge Sun"""
        return self._getValue('actionShow_Planets_EnlargeSun')
    @showPlanetsEnlargeSun.setter
    def showPlanetsEnlargeSun(self, value):
        self._setValue('actionShow_Planets_EnlargeSun')
    @property
    def showSkycultureNativePlanetNames(self):
        """Native planet names (from starlore)"""
        return self._getValue('actionShow_Skyculture_NativePlanetNames')
    @showSkycultureNativePlanetNames.setter
    def showSkycultureNativePlanetNames(self, value):
        self._setValue('actionShow_Skyculture_NativePlanetNames')
    @property
    def showPlanetsNomenclature(self):
        """Nomenclature labels"""
        return self._getValue('actionShow_Planets_Nomenclature')
    @showPlanetsNomenclature.setter
    def showPlanetsNomenclature(self, value):
        self._setValue('actionShow_Planets_Nomenclature')
    @property
    def showPlanetsNomenclatureSpecialPointsOnly(self):
        """Special nomenclature points only"""
        return self._getValue('actionShow_Planets_Nomenclature_SpecialPoints_Only')
    @showPlanetsNomenclatureSpecialPointsOnly.setter
    def showPlanetsNomenclatureSpecialPointsOnly(self, value):
        self._setValue('actionShow_Planets_Nomenclature_SpecialPoints_Only')
    @property
    def showStars(self):
        """Stars"""
        return self._getValue('actionShow_Stars')
    @showStars.setter
    def showStars(self, value):
        self._setValue('actionShow_Stars')
    @property
    def showStarsLabels(self):
        """Stars labels"""
        return self._getValue('actionShow_Stars_Labels')
    @showStarsLabels.setter
    def showStarsLabels(self, value):
        self._setValue('actionShow_Stars_Labels')
    def showStarsMagnitudeLimitIncrease(self):
        """Increase the magnitude limit for stars"""
        return self._action('actionShow_Stars_MagnitudeLimitIncrease')
    def showStarsMagnitudeLimitReduce(self):
        """Reduce the magnitude limit for stars"""
        return self._action('actionShow_Stars_MagnitudeLimitReduce')
    @property
    def horizontalFlip(self):
        """Flip scene horizontally"""
        return self._getValue('actionHorizontal_Flip')
    @horizontalFlip.setter
    def horizontalFlip(self, value):
        self._setValue('actionHorizontal_Flip')
    @property
    def verticalFlip(self):
        """Flip scene vertically"""
        return self._getValue('actionVertical_Flip')
    @verticalFlip.setter
    def verticalFlip(self, value):
        self._setValue('actionVertical_Flip')
    @property
    def showNebulas(self):
        """Deep-sky objects"""
        return self._getValue('actionShow_Nebulas')
    @showNebulas.setter
    def showNebulas(self, value):
        self._setValue('actionShow_Nebulas')
    @property
    def setNebulaTypeFilterUsage(self):
        """Toggle DSO type filter"""
        return self._getValue('actionSet_Nebula_TypeFilterUsage')
    @setNebulaTypeFilterUsage.setter
    def setNebulaTypeFilterUsage(self, value):
        self._setValue('actionSet_Nebula_TypeFilterUsage')
    @property
    def showMilkyWay(self):
        """Milky Way"""
        return self._getValue('actionShow_MilkyWay')
    @showMilkyWay.setter
    def showMilkyWay(self, value):
        self._setValue('actionShow_MilkyWay')
    @property
    def showZodiacalLight(self):
        """Zodiacal Light"""
        return self._getValue('actionShow_ZodiacalLight')
    @showZodiacalLight.setter
    def showZodiacalLight(self, value):
        self._setValue('actionShow_ZodiacalLight')
    @property
    def showDSOTextures(self):
        """Deep-sky objects background images"""
        return self._getValue('actionShow_DSO_Textures')
    @showDSOTextures.setter
    def showDSOTextures(self, value):
        self._setValue('actionShow_DSO_Textures')
    def showDSOTexturesReload(self):
        """Reload the deep-sky objects background images"""
        return self._action('actionShow_DSO_Textures_Reload')
    @property
    def showToastSurvey(self):
        """Digitized Sky Survey (TOAST)"""
        return self._getValue('actionShow_Toast_Survey')
    @showToastSurvey.setter
    def showToastSurvey(self, value):
        self._setValue('actionShow_Toast_Survey')
    @property
    def showConstellationLines(self):
        """Constellation lines"""
        return self._getValue('actionShow_Constellation_Lines')
    @showConstellationLines.setter
    def showConstellationLines(self, value):
        self._setValue('actionShow_Constellation_Lines')
    @property
    def showConstellationArt(self):
        """Constellation art"""
        return self._getValue('actionShow_Constellation_Art')
    @showConstellationArt.setter
    def showConstellationArt(self, value):
        self._setValue('actionShow_Constellation_Art')
    @property
    def showConstellationLabels(self):
        """Constellation labels"""
        return self._getValue('actionShow_Constellation_Labels')
    @showConstellationLabels.setter
    def showConstellationLabels(self, value):
        self._setValue('actionShow_Constellation_Labels')
    @property
    def showConstellationBoundaries(self):
        """Constellation boundaries"""
        return self._getValue('actionShow_Constellation_Boundaries')
    @showConstellationBoundaries.setter
    def showConstellationBoundaries(self, value):
        self._setValue('actionShow_Constellation_Boundaries')
    @property
    def showConstellationIsolated(self):
        """Select single constellation"""
        return self._getValue('actionShow_Constellation_Isolated')
    @showConstellationIsolated.setter
    def showConstellationIsolated(self, value):
        self._setValue('actionShow_Constellation_Isolated')
    def showConstellationDeselect(self):
        """Remove selection of constellations"""
        return self._action('actionShow_Constellation_Deselect')
    def showConstellationSelect(self):
        """Select all constellations"""
        return self._action('actionShow_Constellation_Select')
    def showSkyCultureReload(self):
        """Reload the sky culture"""
        return self._action('actionShow_SkyCulture_Reload')
    @property
    def showAsterismLines(self):
        """Asterism lines"""
        return self._getValue('actionShow_Asterism_Lines')
    @showAsterismLines.setter
    def showAsterismLines(self, value):
        self._setValue('actionShow_Asterism_Lines')
    @property
    def showAsterismLabels(self):
        """Asterism labels"""
        return self._getValue('actionShow_Asterism_Labels')
    @showAsterismLabels.setter
    def showAsterismLabels(self, value):
        self._setValue('actionShow_Asterism_Labels')
    def showAsterismIsolated(self):
        """Toggle single asterism selection mode"""
        return self._action('actionShow_Asterism_Isolated')
    @property
    def showRayHelpers(self):
        """Ray helpers"""
        return self._getValue('actionShow_Ray_Helpers')
    @showRayHelpers.setter
    def showRayHelpers(self, value):
        self._setValue('actionShow_Ray_Helpers')
    @property
    def showAtmosphere(self):
        """Atmosphere"""
        return self._getValue('actionShow_Atmosphere')
    @showAtmosphere.setter
    def showAtmosphere(self, value):
        self._setValue('actionShow_Atmosphere')
    @property
    def showFog(self):
        """Fog"""
        return self._getValue('actionShow_Fog')
    @showFog.setter
    def showFog(self, value):
        self._setValue('actionShow_Fog')
    @property
    def showCardinalPoints(self):
        """Cardinal points"""
        return self._getValue('actionShow_Cardinal_Points')
    @showCardinalPoints.setter
    def showCardinalPoints(self, value):
        self._setValue('actionShow_Cardinal_Points')
    @property
    def showIntercardinalPoints(self):
        """Ordinal (Intercardinal) points"""
        return self._getValue('actionShow_Intercardinal_Points')
    @showIntercardinalPoints.setter
    def showIntercardinalPoints(self, value):
        self._setValue('actionShow_Intercardinal_Points')
    @property
    def showSecondaryIntercardinalPoints(self):
        """Secondary Intercardinal points"""
        return self._getValue('actionShow_Secondary_Intercardinal_Points')
    @showSecondaryIntercardinalPoints.setter
    def showSecondaryIntercardinalPoints(self, value):
        self._setValue('actionShow_Secondary_Intercardinal_Points')
    @property
    def showGround(self):
        """Ground"""
        return self._getValue('actionShow_Ground')
    @showGround.setter
    def showGround(self, value):
        self._setValue('actionShow_Ground')
    @property
    def showLandscapeIllumination(self):
        """Landscape illumination"""
        return self._getValue('actionShow_LandscapeIllumination')
    @showLandscapeIllumination.setter
    def showLandscapeIllumination(self, value):
        self._setValue('actionShow_LandscapeIllumination')
    @property
    def showLandscapeLabels(self):
        """Landscape labels"""
        return self._getValue('actionShow_LandscapeLabels')
    @showLandscapeLabels.setter
    def showLandscapeLabels(self, value):
        self._setValue('actionShow_LandscapeLabels')
    @property
    def showLightPollutionFromDatabase(self):
        """Light pollution data from locations database"""
        return self._getValue('actionShow_LightPollutionFromDatabase')
    @showLightPollutionFromDatabase.setter
    def showLightPollutionFromDatabase(self, value):
        self._setValue('actionShow_LightPollutionFromDatabase')
    def showLightPollutionIncrease(self):
        """Increase light pollution"""
        return self._action('actionShow_LightPollutionIncrease')
    def showLightPollutionReduce(self):
        """Reduce light pollution"""
        return self._action('actionShow_LightPollutionReduce')
    def showLightPollutionCyclicChange(self):
        """Cyclic change in light pollution"""
        return self._action('actionShow_LightPollutionCyclicChange')
    @property
    def showGridlines(self):
        """Grids and lines"""
        return self._getValue('actionShow_Gridlines')
    @showGridlines.setter
    def showGridlines(self, value):
        self._setValue('actionShow_Gridlines')
    @property
    def showEquatorialGrid(self):
        """Equatorial grid"""
        return self._getValue('actionShow_Equatorial_Grid')
    @showEquatorialGrid.setter
    def showEquatorialGrid(self, value):
        self._setValue('actionShow_Equatorial_Grid')
    @property
    def showFixedEquatorialGrid(self):
        """Fixed Equatorial grid"""
        return self._getValue('actionShow_Fixed_Equatorial_Grid')
    @showFixedEquatorialGrid.setter
    def showFixedEquatorialGrid(self, value):
        self._setValue('actionShow_Fixed_Equatorial_Grid')
    @property
    def showAzimuthalGrid(self):
        """Azimuthal grid"""
        return self._getValue('actionShow_Azimuthal_Grid')
    @showAzimuthalGrid.setter
    def showAzimuthalGrid(self, value):
        self._setValue('actionShow_Azimuthal_Grid')
    @property
    def showEclipticLine(self):
        """Ecliptic line"""
        return self._getValue('actionShow_Ecliptic_Line')
    @showEclipticLine.setter
    def showEclipticLine(self, value):
        self._setValue('actionShow_Ecliptic_Line')
    @property
    def showEclipticJ2000Line(self):
        """Ecliptic J2000 line"""
        return self._getValue('actionShow_Ecliptic_J2000_Line')
    @showEclipticJ2000Line.setter
    def showEclipticJ2000Line(self, value):
        self._setValue('actionShow_Ecliptic_J2000_Line')
    @property
    def showInvariablePlaneLine(self):
        """Invariable Plane line"""
        return self._getValue('actionShow_Invariable_Plane_Line')
    @showInvariablePlaneLine.setter
    def showInvariablePlaneLine(self, value):
        self._setValue('actionShow_Invariable_Plane_Line')
    @property
    def showSolarEquatorLine(self):
        """Solar Equator Plane line"""
        return self._getValue('actionShow_Solar_Equator_Line')
    @showSolarEquatorLine.setter
    def showSolarEquatorLine(self, value):
        self._setValue('actionShow_Solar_Equator_Line')
    @property
    def showEquatorLine(self):
        """Equator line"""
        return self._getValue('actionShow_Equator_Line')
    @showEquatorLine.setter
    def showEquatorLine(self, value):
        self._setValue('actionShow_Equator_Line')
    @property
    def showEquatorJ2000Line(self):
        """Equator J2000 line"""
        return self._getValue('actionShow_Equator_J2000_Line')
    @showEquatorJ2000Line.setter
    def showEquatorJ2000Line(self, value):
        self._setValue('actionShow_Equator_J2000_Line')
    @property
    def showFixedEquatorLine(self):
        """Fixed Equator line"""
        return self._getValue('actionShow_Fixed_Equator_Line')
    @showFixedEquatorLine.setter
    def showFixedEquatorLine(self, value):
        self._setValue('actionShow_Fixed_Equator_Line')
    @property
    def showMeridianLine(self):
        """Meridian line"""
        return self._getValue('actionShow_Meridian_Line')
    @showMeridianLine.setter
    def showMeridianLine(self, value):
        self._setValue('actionShow_Meridian_Line')
    @property
    def showHorizonLine(self):
        """Horizon line"""
        return self._getValue('actionShow_Horizon_Line')
    @showHorizonLine.setter
    def showHorizonLine(self, value):
        self._setValue('actionShow_Horizon_Line')
    @property
    def showEquatorialJ2000Grid(self):
        """Equatorial J2000 grid"""
        return self._getValue('actionShow_Equatorial_J2000_Grid')
    @showEquatorialJ2000Grid.setter
    def showEquatorialJ2000Grid(self, value):
        self._setValue('actionShow_Equatorial_J2000_Grid')
    @property
    def showEclipticJ2000Grid(self):
        """Ecliptic J2000 grid"""
        return self._getValue('actionShow_Ecliptic_J2000_Grid')
    @showEclipticJ2000Grid.setter
    def showEclipticJ2000Grid(self, value):
        self._setValue('actionShow_Ecliptic_J2000_Grid')
    @property
    def showEclipticGrid(self):
        """Ecliptic grid"""
        return self._getValue('actionShow_Ecliptic_Grid')
    @showEclipticGrid.setter
    def showEclipticGrid(self, value):
        self._setValue('actionShow_Ecliptic_Grid')
    @property
    def showGalacticGrid(self):
        """Galactic grid"""
        return self._getValue('actionShow_Galactic_Grid')
    @showGalacticGrid.setter
    def showGalacticGrid(self, value):
        self._setValue('actionShow_Galactic_Grid')
    @property
    def showGalacticEquatorLine(self):
        """Galactic equator"""
        return self._getValue('actionShow_Galactic_Equator_Line')
    @showGalacticEquatorLine.setter
    def showGalacticEquatorLine(self, value):
        self._setValue('actionShow_Galactic_Equator_Line')
    @property
    def showSupergalacticGrid(self):
        """Supergalactic grid"""
        return self._getValue('actionShow_Supergalactic_Grid')
    @showSupergalacticGrid.setter
    def showSupergalacticGrid(self, value):
        self._setValue('actionShow_Supergalactic_Grid')
    @property
    def showSupergalacticEquatorLine(self):
        """Supergalactic equator"""
        return self._getValue('actionShow_Supergalactic_Equator_Line')
    @showSupergalacticEquatorLine.setter
    def showSupergalacticEquatorLine(self, value):
        self._setValue('actionShow_Supergalactic_Equator_Line')
    @property
    def showLongitudeLine(self):
        """Opposition/conjunction longitude line"""
        return self._getValue('actionShow_Longitude_Line')
    @showLongitudeLine.setter
    def showLongitudeLine(self, value):
        self._setValue('actionShow_Longitude_Line')
    @property
    def showQuadratureLine(self):
        """Quadrature line"""
        return self._getValue('actionShow_Quadrature_Line')
    @showQuadratureLine.setter
    def showQuadratureLine(self, value):
        self._setValue('actionShow_Quadrature_Line')
    @property
    def showPrecessionCircles(self):
        """Precession Circles"""
        return self._getValue('actionShow_Precession_Circles')
    @showPrecessionCircles.setter
    def showPrecessionCircles(self, value):
        self._setValue('actionShow_Precession_Circles')
    @property
    def showPrimeVerticalLine(self):
        """Prime Vertical"""
        return self._getValue('actionShow_Prime_Vertical_Line')
    @showPrimeVerticalLine.setter
    def showPrimeVerticalLine(self, value):
        self._setValue('actionShow_Prime_Vertical_Line')
    @property
    def showCurrentVerticalLine(self):
        """Current Vertical"""
        return self._getValue('actionShow_Current_Vertical_Line')
    @showCurrentVerticalLine.setter
    def showCurrentVerticalLine(self, value):
        self._setValue('actionShow_Current_Vertical_Line')
    @property
    def showColureLines(self):
        """Colure Lines"""
        return self._getValue('actionShow_Colure_Lines')
    @showColureLines.setter
    def showColureLines(self, value):
        self._setValue('actionShow_Colure_Lines')
    @property
    def showCircumpolarCircles(self):
        """Circumpolar Circles"""
        return self._getValue('actionShow_Circumpolar_Circles')
    @showCircumpolarCircles.setter
    def showCircumpolarCircles(self, value):
        self._setValue('actionShow_Circumpolar_Circles')
    @property
    def showUmbraCircle(self):
        """Umbra Circle"""
        return self._getValue('actionShow_Umbra_Circle')
    @showUmbraCircle.setter
    def showUmbraCircle(self, value):
        self._setValue('actionShow_Umbra_Circle')
    @property
    def showPenumbraCircle(self):
        """Penumbra Circle"""
        return self._getValue('actionShow_Penumbra_Circle')
    @showPenumbraCircle.setter
    def showPenumbraCircle(self, value):
        self._setValue('actionShow_Penumbra_Circle')
    @property
    def showCelestialJ2000Poles(self):
        """Celestial J2000 poles"""
        return self._getValue('actionShow_Celestial_J2000_Poles')
    @showCelestialJ2000Poles.setter
    def showCelestialJ2000Poles(self, value):
        self._setValue('actionShow_Celestial_J2000_Poles')
    @property
    def showCelestialPoles(self):
        """Celestial poles"""
        return self._getValue('actionShow_Celestial_Poles')
    @showCelestialPoles.setter
    def showCelestialPoles(self, value):
        self._setValue('actionShow_Celestial_Poles')
    @property
    def showZenithNadir(self):
        """Zenith and nadir"""
        return self._getValue('actionShow_Zenith_Nadir')
    @showZenithNadir.setter
    def showZenithNadir(self, value):
        self._setValue('actionShow_Zenith_Nadir')
    @property
    def showEclipticJ2000Poles(self):
        """Ecliptic J2000 poles"""
        return self._getValue('actionShow_Ecliptic_J2000_Poles')
    @showEclipticJ2000Poles.setter
    def showEclipticJ2000Poles(self, value):
        self._setValue('actionShow_Ecliptic_J2000_Poles')
    @property
    def showEclipticPoles(self):
        """Ecliptic poles"""
        return self._getValue('actionShow_Ecliptic_Poles')
    @showEclipticPoles.setter
    def showEclipticPoles(self, value):
        self._setValue('actionShow_Ecliptic_Poles')
    @property
    def showGalacticPoles(self):
        """Galactic poles"""
        return self._getValue('actionShow_Galactic_Poles')
    @showGalacticPoles.setter
    def showGalacticPoles(self, value):
        self._setValue('actionShow_Galactic_Poles')
    @property
    def showGalacticCenter(self):
        """Galactic center and anticenter"""
        return self._getValue('actionShow_Galactic_Center')
    @showGalacticCenter.setter
    def showGalacticCenter(self, value):
        self._setValue('actionShow_Galactic_Center')
    @property
    def showSupergalacticPoles(self):
        """Supergalactic poles"""
        return self._getValue('actionShow_Supergalactic_Poles')
    @showSupergalacticPoles.setter
    def showSupergalacticPoles(self, value):
        self._setValue('actionShow_Supergalactic_Poles')
    @property
    def showEquinoxJ2000Points(self):
        """Equinox J2000 points"""
        return self._getValue('actionShow_Equinox_J2000_Points')
    @showEquinoxJ2000Points.setter
    def showEquinoxJ2000Points(self, value):
        self._setValue('actionShow_Equinox_J2000_Points')
    @property
    def showEquinoxPoints(self):
        """Equinox points"""
        return self._getValue('actionShow_Equinox_Points')
    @showEquinoxPoints.setter
    def showEquinoxPoints(self, value):
        self._setValue('actionShow_Equinox_Points')
    @property
    def showSolsticeJ2000Points(self):
        """Solstice J2000 points"""
        return self._getValue('actionShow_Solstice_J2000_Points')
    @showSolsticeJ2000Points.setter
    def showSolsticeJ2000Points(self, value):
        self._setValue('actionShow_Solstice_J2000_Points')
    @property
    def showSolsticePoints(self):
        """Solstice points"""
        return self._getValue('actionShow_Solstice_Points')
    @showSolsticePoints.setter
    def showSolsticePoints(self, value):
        self._setValue('actionShow_Solstice_Points')
    @property
    def showAntisolarPoint(self):
        """Antisolar point"""
        return self._getValue('actionShow_Antisolar_Point')
    @showAntisolarPoint.setter
    def showAntisolarPoint(self, value):
        self._setValue('actionShow_Antisolar_Point')
    @property
    def showUmbraCenterPoint(self):
        """The center of the Earth's umbra"""
        return self._getValue('actionShow_Umbra_Center_Point')
    @showUmbraCenterPoint.setter
    def showUmbraCenterPoint(self, value):
        self._setValue('actionShow_Umbra_Center_Point')
    @property
    def showApexPoints(self):
        """Apex points"""
        return self._getValue('actionShow_Apex_Points')
    @showApexPoints.setter
    def showApexPoints(self, value):
        self._setValue('actionShow_Apex_Points')
    @property
    def showFOVCenterMarker(self):
        """FOV Center marker"""
        return self._getValue('actionShow_FOV_Center_Marker')
    @showFOVCenterMarker.setter
    def showFOVCenterMarker(self, value):
        self._setValue('actionShow_FOV_Center_Marker')
    @property
    def showFOVCircularMarker(self):
        """Circular marker of FOV"""
        return self._getValue('actionShow_FOV_Circular_Marker')
    @showFOVCircularMarker.setter
    def showFOVCircularMarker(self, value):
        self._setValue('actionShow_FOV_Circular_Marker')
    @property
    def showFOVRectangularMarker(self):
        """Rectangular marker of FOV"""
        return self._getValue('actionShow_FOV_Rectangular_Marker')
    @showFOVRectangularMarker.setter
    def showFOVRectangularMarker(self, value):
        self._setValue('actionShow_FOV_Rectangular_Marker')
    @property
    def showCompassMarks(self):
        """Compass marks"""
        return self._getValue('actionShow_Compass_Marks')
    @showCompassMarks.setter
    def showCompassMarks(self, value):
        self._setValue('actionShow_Compass_Marks')
    @property
    def showNightMode(self):
        """Night mode"""
        return self._getValue('actionShow_Night_Mode')
    @showNightMode.setter
    def showNightMode(self, value):
        self._setValue('actionShow_Night_Mode')
    @property
    def setFullScreenGlobal(self):
        """Full-screen mode"""
        return self._getValue('actionSet_Full_Screen_Global')
    @setFullScreenGlobal.setter
    def setFullScreenGlobal(self, value):
        self._setValue('actionSet_Full_Screen_Global')
    @property
    def showExoplanets(self):
        """Show exoplanets"""
        return self._getValue('actionShow_Exoplanets')
    @showExoplanets.setter
    def showExoplanets(self, value):
        self._setValue('actionShow_Exoplanets')
    @property
    def showExoplanetsConfigDialog(self):
        """Show settings dialog"""
        return self._getValue('actionShow_Exoplanets_ConfigDialog')
    @showExoplanetsConfigDialog.setter
    def showExoplanetsConfigDialog(self, value):
        self._setValue('actionShow_Exoplanets_ConfigDialog')
    def setFOV0(self):
        """Set predefined FOV #0 (0.50°)"""
        return self._action('actionSet_FOV_0')
    def setFOV1(self):
        """Set predefined FOV #1 (180.00°)"""
        return self._action('actionSet_FOV_1')
    def setFOV2(self):
        """Set predefined FOV #2 (90.00°)"""
        return self._action('actionSet_FOV_2')
    def setFOV3(self):
        """Set predefined FOV #3 (60.00°)"""
        return self._action('actionSet_FOV_3')
    def setFOV4(self):
        """Set predefined FOV #4 (45.00°)"""
        return self._action('actionSet_FOV_4')
    def setFOV5(self):
        """Set predefined FOV #5 (20.00°)"""
        return self._action('actionSet_FOV_5')
    def setFOV6(self):
        """Set predefined FOV #6 (10.00°)"""
        return self._action('actionSet_FOV_6')
    def setFOV7(self):
        """Set predefined FOV #7 (5.00°)"""
        return self._action('actionSet_FOV_7')
    def setFOV8(self):
        """Set predefined FOV #8 (2.00°)"""
        return self._action('actionSet_FOV_8')
    def setFOV9(self):
        """Set predefined FOV #9 (1.00°)"""
        return self._action('actionSet_FOV_9')
    @property
    def showMeteorShowers(self):
        """Toggle meteor showers"""
        return self._getValue('actionShow_MeteorShowers')
    @showMeteorShowers.setter
    def showMeteorShowers(self, value):
        self._setValue('actionShow_MeteorShowers')
    @property
    def showMeteorShowerslabels(self):
        """Toggle radiant labels"""
        return self._getValue('actionShow_MeteorShowers_labels')
    @showMeteorShowerslabels.setter
    def showMeteorShowerslabels(self, value):
        self._setValue('actionShow_MeteorShowers_labels')
    @property
    def showMeteorShowersconfigdialog(self):
        """Show settings dialog"""
        return self._getValue('actionShow_MeteorShowers_config_dialog')
    @showMeteorShowersconfigdialog.setter
    def showMeteorShowersconfigdialog(self, value):
        self._setValue('actionShow_MeteorShowers_config_dialog')
    @property
    def showMeteorShowerssearchdialog(self):
        """Show meteor showers search dialog"""
        return self._getValue('actionShow_MeteorShowers_search_dialog')
    @showMeteorShowerssearchdialog.setter
    def showMeteorShowerssearchdialog(self, value):
        self._setValue('actionShow_MeteorShowers_search_dialog')
    @property
    def switchEquatorialMount(self):
        """Switch between equatorial and azimuthal mount"""
        return self._getValue('actionSwitch_Equatorial_Mount')
    @switchEquatorialMount.setter
    def switchEquatorialMount(self, value):
        self._setValue('actionSwitch_Equatorial_Mount')
    def saveScreenshotGlobal(self):
        """Save screenshot"""
        return self._action('actionSave_Screenshot_Global')
    def reloadShaders(self):
        """Reload shaders (for development)"""
        return self._action('actionReload_Shaders')
    def quitGlobal(self):
        """Quit"""
        return self._action('actionQuit_Global')
    def saveCopyObjectInformationGlobal(self):
        """Copy selected object information to clipboard"""
        return self._action('actionSave_Copy_Object_Information_Global')
    @property
    def autoHideHorizontalButtonBar(self):
        """Auto hide horizontal button bar"""
        return self._getValue('actionAutoHideHorizontalButtonBar')
    @autoHideHorizontalButtonBar.setter
    def autoHideHorizontalButtonBar(self, value):
        self._setValue('actionAutoHideHorizontalButtonBar')
    @property
    def autoHideVerticalButtonBar(self):
        """Auto hide vertical button bar"""
        return self._getValue('actionAutoHideVerticalButtonBar')
    @autoHideVerticalButtonBar.setter
    def autoHideVerticalButtonBar(self, value):
        self._setValue('actionAutoHideVerticalButtonBar')
    @property
    def toggleGuiHiddenGlobal(self):
        """Toggle visibility of GUI"""
        return self._getValue('actionToggle_GuiHidden_Global')
    @toggleGuiHiddenGlobal.setter
    def toggleGuiHiddenGlobal(self, value):
        self._setValue('actionToggle_GuiHidden_Global')
    @property
    def gotoSelectedObject(self):
        """Center on selected object"""
        return self._getValue('actionGoto_Selected_Object')
    @gotoSelectedObject.setter
    def gotoSelectedObject(self, value):
        self._setValue('actionGoto_Selected_Object')
    def gotoDeselection(self):
        """Deselect the selected object"""
        return self._action('actionGoto_Deselection')
    def zoomInAuto(self):
        """Zoom in on selected object"""
        return self._action('actionZoom_In_Auto')
    def zoomOutAuto(self):
        """Zoom out"""
        return self._action('actionZoom_Out_Auto')
    @property
    def setTracking(self):
        """Track object"""
        return self._getValue('actionSet_Tracking')
    @setTracking.setter
    def setTracking(self, value):
        self._setValue('actionSet_Tracking')
    def lookTowardsEast(self):
        """Look towards East"""
        return self._action('actionLook_Towards_East')
    def lookTowardsWest(self):
        """Look towards West"""
        return self._action('actionLook_Towards_West')
    def lookTowardsNorth(self):
        """Look towards North"""
        return self._action('actionLook_Towards_North')
    def lookTowardsSouth(self):
        """Look towards South"""
        return self._action('actionLook_Towards_South')
    def lookTowardsZenith(self):
        """Look towards Zenith"""
        return self._action('actionLook_Towards_Zenith')
    def lookTowardsNCP(self):
        """Look towards North Celestial pole"""
        return self._action('actionLook_Towards_NCP')
    def lookTowardsSCP(self):
        """Look towards South Celestial pole"""
        return self._action('actionLook_Towards_SCP')
    def setHomePlanetToSelected(self):
        """Set home planet to selected planet"""
        return self._action('actionSet_Home_Planet_To_Selected')
    def goHomeGlobal(self):
        """Go to home"""
        return self._action('actionGo_Home_Global')
    @property
    def showOculars(self):
        """Ocular view"""
        return self._getValue('actionShow_Oculars')
    @showOculars.setter
    def showOculars(self, value):
        self._setValue('actionShow_Oculars')
    def showOcularMenu(self):
        """Oculars popup menu"""
        return self._action('actionShow_Ocular_Menu')
    @property
    def showOcularCrosshairs(self):
        """Show crosshairs"""
        return self._getValue('actionShow_Ocular_Crosshairs')
    @showOcularCrosshairs.setter
    def showOcularCrosshairs(self, value):
        self._setValue('actionShow_Ocular_Crosshairs')
    @property
    def showSensor(self):
        """Image sensor frame"""
        return self._getValue('actionShow_Sensor')
    @showSensor.setter
    def showSensor(self, value):
        self._setValue('actionShow_Sensor')
    @property
    def showTelrad(self):
        """Telrad sight"""
        return self._getValue('actionShow_Telrad')
    @showTelrad.setter
    def showTelrad(self, value):
        self._setValue('actionShow_Telrad')
    @property
    def showOcularsdialog(self):
        """Show settings dialog"""
        return self._getValue('actionShow_Oculars_dialog')
    @showOcularsdialog.setter
    def showOcularsdialog(self, value):
        self._setValue('actionShow_Oculars_dialog')
    @property
    def showOcularsGUI(self):
        """Toggle Oculars button bar"""
        return self._getValue('actionShow_Oculars_GUI')
    @showOcularsGUI.setter
    def showOcularsGUI(self, value):
        self._setValue('actionShow_Oculars_GUI')
    def showTelescopeIncrement(self):
        """Select next telescope"""
        return self._action('actionShow_Telescope_Increment')
    def showTelescopeDecrement(self):
        """Select previous telescope"""
        return self._action('actionShow_Telescope_Decrement')
    def showOcularIncrement(self):
        """Select next eyepiece"""
        return self._action('actionShow_Ocular_Increment')
    def showOcularDecrement(self):
        """Select previous eyepiece"""
        return self._action('actionShow_Ocular_Decrement')
    def showOcularRotateReticleClockwise(self):
        """Rotate reticle pattern of the eyepiece clockwise"""
        return self._action('actionShow_Ocular_Rotate_Reticle_Clockwise')
    def showOcularRotateReticleCounterclockwise(self):
        """Rotate reticle pattern of the eyepiece counterclockwise"""
        return self._action('actionShow_Ocular_Rotate_Reticle_Counterclockwise')
    def showSensorCropOverlay(self):
        """Toggle sensor crop overlay"""
        return self._action('actionShow_Sensor_Crop_Overlay')
    def showSensorPixelGrid(self):
        """Toggle sensor pixel grid"""
        return self._action('actionShow_Sensor_Pixel_Grid')
    def showSensorFocuserOverlay(self):
        """Toggle focuser overlay"""
        return self._action('actionShow_Sensor_Focuser_Overlay')
    def toggleOcularsPreviousOcular(self):
        """Previous ocular"""
        return self._action('actionToggle_Oculars_Previous_Ocular')
    def toggleOcularsNextOcular(self):
        """Next ocular"""
        return self._action('actionToggle_Oculars_Next_Ocular')
    def toggleOcularsPreviousLens(self):
        """Previous lens"""
        return self._action('actionToggle_Oculars_Previous_Lens')
    def toggleOcularsNextLens(self):
        """Next lens"""
        return self._action('actionToggle_Oculars_Next_Lens')
    def toggleOcularsPreviousCCD(self):
        """Previous CCD frame"""
        return self._action('actionToggle_Oculars_Previous_CCD')
    def toggleOcularsNextCCD(self):
        """Next CCD frame"""
        return self._action('actionToggle_Oculars_Next_CCD')
    def toggleOcularsPreviousTelescope(self):
        """Previous telescope"""
        return self._action('actionToggle_Oculars_Previous_Telescope')
    def toggleOcularsNextTelescope(self):
        """Next telescope"""
        return self._action('actionToggle_Oculars_Next_Telescope')
    def toggleOcularsRotateFrameReset(self):
        """Reset the sensor frame rotation"""
        return self._action('actionToggle_Oculars_Rotate_Frame_Reset')
    def toggleOcularsRotateFrame15Counterclockwise(self):
        """Rotate the sensor frame 15 degrees counterclockwise"""
        return self._action('actionToggle_Oculars_Rotate_Frame_15_Counterclockwise')
    def toggleOcularsRotateFrame5Counterclockwise(self):
        """Rotate the sensor frame 5 degrees counterclockwise"""
        return self._action('actionToggle_Oculars_Rotate_Frame_5_Counterclockwise')
    def toggleOcularsRotateFrame1Counterclockwise(self):
        """Rotate the sensor frame 1 degree counterclockwise"""
        return self._action('actionToggle_Oculars_Rotate_Frame_1_Counterclockwise')
    def toggleOcularsRotateFrame15Clockwise(self):
        """Rotate the sensor frame 15 degrees clockwise"""
        return self._action('actionToggle_Oculars_Rotate_Frame_15_Clockwise')
    def toggleOcularsRotateFrame5Clockwise(self):
        """Rotate the sensor frame 5 degrees clockwise"""
        return self._action('actionToggle_Oculars_Rotate_Frame_5_Clockwise')
    def toggleOcularsRotateFrame1Clockwise(self):
        """Rotate the sensor frame 1 degree clockwise"""
        return self._action('actionToggle_Oculars_Rotate_Frame_1_Clockwise')
    def toggleOcularsRotatePrismReset(self):
        """Reset the prism rotation"""
        return self._action('actionToggle_Oculars_Rotate_Prism_Reset')
    def toggleOcularsRotatePrism15Counterclockwise(self):
        """Rotate the prism 15 degrees counterclockwise"""
        return self._action('actionToggle_Oculars_Rotate_Prism_15_Counterclockwise')
    def toggleOcularsRotatePrism5Counterclockwise(self):
        """Rotate the prism 5 degrees counterclockwise"""
        return self._action('actionToggle_Oculars_Rotate_Prism_5_Counterclockwise')
    def toggleOcularsRotatePrism1Counterclockwise(self):
        """Rotate the prism 1 degree counterclockwise"""
        return self._action('actionToggle_Oculars_Rotate_Prism_1_Counterclockwise')
    def toggleOcularsRotatePrism15Clockwise(self):
        """Rotate the prism 15 degrees clockwise"""
        return self._action('actionToggle_Oculars_Rotate_Prism_15_Clockwise')
    def toggleOcularsRotatePrism5Clockwise(self):
        """Rotate the prism 5 degrees clockwise"""
        return self._action('actionToggle_Oculars_Rotate_Prism_5_Clockwise')
    def toggleOcularsRotatePrism1Clockwise(self):
        """Rotate the prism 1 degree clockwise"""
        return self._action('actionToggle_Oculars_Rotate_Prism_1_Clockwise')
    @property
    def showRemoteControl(self):
        """Remote control"""
        return self._getValue('actionShow_Remote_Control')
    @showRemoteControl.setter
    def showRemoteControl(self, value):
        self._setValue('actionShow_Remote_Control')
    @property
    def showRemoteControldialog(self):
        """Remote control config"""
        return self._getValue('actionShow_Remote_Control_dialog')
    @showRemoteControldialog.setter
    def showRemoteControldialog(self, value):
        self._setValue('actionShow_Remote_Control_dialog')
    @property
    def showSatelliteHints(self):
        """Artificial satellites"""
        return self._getValue('actionShow_Satellite_Hints')
    @showSatelliteHints.setter
    def showSatelliteHints(self, value):
        self._setValue('actionShow_Satellite_Hints')
    @property
    def showSatelliteLabels(self):
        """Satellite labels"""
        return self._getValue('actionShow_Satellite_Labels')
    @showSatelliteLabels.setter
    def showSatelliteLabels(self, value):
        self._setValue('actionShow_Satellite_Labels')
    @property
    def showSatelliteConfigDialogGlobal(self):
        """Show settings dialog"""
        return self._getValue('actionShow_Satellite_ConfigDialog_Global')
    @showSatelliteConfigDialogGlobal.setter
    def showSatelliteConfigDialogGlobal(self, value):
        self._setValue('actionShow_Satellite_ConfigDialog_Global')
    def showSatelliteGroupamateur(self):
        """Show satellites from the group 'amateur'"""
        return self._action('actionShow_Satellite_Group_amateur')
    def hideSatelliteGroupamateur(self):
        """Hide satellites from the group 'amateur'"""
        return self._action('actionHide_Satellite_Group_amateur')
    def showSatelliteGroupbeidou(self):
        """Show satellites from the group 'beidou'"""
        return self._action('actionShow_Satellite_Group_beidou')
    def hideSatelliteGroupbeidou(self):
        """Hide satellites from the group 'beidou'"""
        return self._action('actionHide_Satellite_Group_beidou')
    def showSatelliteGroupcommunications(self):
        """Show satellites from the group 'communications'"""
        return self._action('actionShow_Satellite_Group_communications')
    def hideSatelliteGroupcommunications(self):
        """Hide satellites from the group 'communications'"""
        return self._action('actionHide_Satellite_Group_communications')
    def showSatelliteGroupcosmos(self):
        """Show satellites from the group 'cosmos'"""
        return self._action('actionShow_Satellite_Group_cosmos')
    def hideSatelliteGroupcosmos(self):
        """Hide satellites from the group 'cosmos'"""
        return self._action('actionHide_Satellite_Group_cosmos')
    def showSatelliteGroupcrewed(self):
        """Show satellites from the group 'crewed'"""
        return self._action('actionShow_Satellite_Group_crewed')
    def hideSatelliteGroupcrewed(self):
        """Hide satellites from the group 'crewed'"""
        return self._action('actionHide_Satellite_Group_crewed')
    def showSatelliteGroupdebris(self):
        """Show satellites from the group 'debris'"""
        return self._action('actionShow_Satellite_Group_debris')
    def hideSatelliteGroupdebris(self):
        """Hide satellites from the group 'debris'"""
        return self._action('actionHide_Satellite_Group_debris')
    def showSatelliteGroupeducation(self):
        """Show satellites from the group 'education'"""
        return self._action('actionShow_Satellite_Group_education')
    def hideSatelliteGroupeducation(self):
        """Hide satellites from the group 'education'"""
        return self._action('actionHide_Satellite_Group_education')
    def showSatelliteGroupgalileo(self):
        """Show satellites from the group 'galileo'"""
        return self._action('actionShow_Satellite_Group_galileo')
    def hideSatelliteGroupgalileo(self):
        """Hide satellites from the group 'galileo'"""
        return self._action('actionHide_Satellite_Group_galileo')
    def showSatelliteGroupglo_ops(self):
        """Show satellites from the group 'glo-ops'"""
        return self._action('actionShow_Satellite_Group_glo-ops')
    def hideSatelliteGroupglo_ops(self):
        """Hide satellites from the group 'glo-ops'"""
        return self._action('actionHide_Satellite_Group_glo-ops')
    def showSatelliteGroupglonass(self):
        """Show satellites from the group 'glonass'"""
        return self._action('actionShow_Satellite_Group_glonass')
    def hideSatelliteGroupglonass(self):
        """Hide satellites from the group 'glonass'"""
        return self._action('actionHide_Satellite_Group_glonass')
    def showSatelliteGroupgnss(self):
        """Show satellites from the group 'gnss'"""
        return self._action('actionShow_Satellite_Group_gnss')
    def hideSatelliteGroupgnss(self):
        """Hide satellites from the group 'gnss'"""
        return self._action('actionHide_Satellite_Group_gnss')
    def showSatelliteGroupgps(self):
        """Show satellites from the group 'gps'"""
        return self._action('actionShow_Satellite_Group_gps')
    def hideSatelliteGroupgps(self):
        """Hide satellites from the group 'gps'"""
        return self._action('actionHide_Satellite_Group_gps')
    def showSatelliteGroupgps_ops(self):
        """Show satellites from the group 'gps-ops'"""
        return self._action('actionShow_Satellite_Group_gps-ops')
    def hideSatelliteGroupgps_ops(self):
        """Hide satellites from the group 'gps-ops'"""
        return self._action('actionHide_Satellite_Group_gps-ops')
    def showSatelliteGroupnavigation(self):
        """Show satellites from the group 'navigation'"""
        return self._action('actionShow_Satellite_Group_navigation')
    def hideSatelliteGroupnavigation(self):
        """Hide satellites from the group 'navigation'"""
        return self._action('actionHide_Satellite_Group_navigation')
    def showSatelliteGroupobservatory(self):
        """Show satellites from the group 'observatory'"""
        return self._action('actionShow_Satellite_Group_observatory')
    def hideSatelliteGroupobservatory(self):
        """Hide satellites from the group 'observatory'"""
        return self._action('actionHide_Satellite_Group_observatory')
    def showSatelliteGroupresupply(self):
        """Show satellites from the group 'resupply'"""
        return self._action('actionShow_Satellite_Group_resupply')
    def hideSatelliteGroupresupply(self):
        """Hide satellites from the group 'resupply'"""
        return self._action('actionHide_Satellite_Group_resupply')
    def showSatelliteGroupscience(self):
        """Show satellites from the group 'science'"""
        return self._action('actionShow_Satellite_Group_science')
    def hideSatelliteGroupscience(self):
        """Hide satellites from the group 'science'"""
        return self._action('actionHide_Satellite_Group_science')
    def showSatelliteGroupscientific(self):
        """Show satellites from the group 'scientific'"""
        return self._action('actionShow_Satellite_Group_scientific')
    def hideSatelliteGroupscientific(self):
        """Hide satellites from the group 'scientific'"""
        return self._action('actionHide_Satellite_Group_scientific')
    def showSatelliteGroupstations(self):
        """Show satellites from the group 'stations'"""
        return self._action('actionShow_Satellite_Group_stations')
    def hideSatelliteGroupstations(self):
        """Hide satellites from the group 'stations'"""
        return self._action('actionHide_Satellite_Group_stations')
    def showSatelliteGrouptdrss(self):
        """Show satellites from the group 'tdrss'"""
        return self._action('actionShow_Satellite_Group_tdrss')
    def hideSatelliteGrouptdrss(self):
        """Hide satellites from the group 'tdrss'"""
        return self._action('actionHide_Satellite_Group_tdrss')
    def showSatelliteGroupvisual(self):
        """Show satellites from the group 'visual'"""
        return self._action('actionShow_Satellite_Group_visual')
    def hideSatelliteGroupvisual(self):
        """Hide satellites from the group 'visual'"""
        return self._action('actionHide_Satellite_Group_visual')
    def showSatelliteGroupweather(self):
        """Show satellites from the group 'weather'"""
        return self._action('actionShow_Satellite_Group_weather')
    def hideSatelliteGroupweather(self):
        """Hide satellites from the group 'weather'"""
        return self._action('actionHide_Satellite_Group_weather')
    def martiananalemma(self):
        """Martian analemma"""
        return self._action('actionScript/martian_analemma.ssc')
    def earth1(self):
        """Earth best views from other bodies"""
        return self._action('actionScript/earth_1.ssc')
    def randomlocation(self):
        """Random location"""
        return self._action('actionScript/random_location.ssc')
    def doublestars(self):
        """20 Fun Naked-Eye Double Stars"""
        return self._action('actionScript/double_stars.ssc')
    def solareclipse(self):
        """Solar Eclipse 2009"""
        return self._action('actionScript/solar_eclipse.ssc')
    def lunartotal(self):
        """Total Lunar Eclipse"""
        return self._action('actionScript/lunar_total.ssc')
    def triplesunriseandsunsets(self):
        """Mercury Triple Sunrise and Sunset"""
        return self._action('actionScript/triple_sunrise_and_sunsets.ssc')
    def earth5(self):
        """Earth and other planet's Greatest Elongations and Oppositions from Mars"""
        return self._action('actionScript/earth_5.ssc')
    def earth6(self):
        """Earth and Mars Greatest Elongations and Transits from Callisto"""
        return self._action('actionScript/earth_6.ssc')
    def screensaver(self):
        """Screensaver"""
        return self._action('actionScript/screensaver.ssc')
    def earth4(self):
        """Earth Events from Mars"""
        return self._action('actionScript/earth_4.ssc')
    def transitofvenus(self):
        """Transit of Venus"""
        return self._action('actionScript/transit_of_venus.ssc')
    def phobosphun5(self):
        """3 Transits and 2 Eclipses from Deimos 2027"""
        return self._action('actionScript/phobos_phun_5.ssc')
    def zodiac(self):
        """Zodiac"""
        return self._action('actionScript/zodiac.ssc')
    def phobosphun3(self):
        """Eclipse from Olympus Mons Jan 2, 2021"""
        return self._action('actionScript/phobos_phun_3.ssc')
    def phobosphun4(self):
        """Occultation of Earth and Jupiter 2048"""
        return self._action('actionScript/phobos_phun_4.ssc')
    def solarsystemscreensaver(self):
        """Solar System Screensaver"""
        return self._action('actionScript/solar_system_screensaver.ssc')
    def earth7(self):
        """Earth and other Planets from Ceres"""
        return self._action('actionScript/earth_7.ssc')
    def morsels4(self):
        """Mutual occultations of planets"""
        return self._action('actionScript/morsels_4.ssc')
    def planetstour(self):
        """Planet Objects Tour"""
        return self._action('actionScript/planets_tour.ssc')
    def earth2(self):
        """Earth Events from Mercury"""
        return self._action('actionScript/earth_2.ssc')
    def h400tour(self):
        """Herschel 400 Tour"""
        return self._action('actionScript/h400_tour.ssc')
    def phobosphun1(self):
        """Double eclipse from Deimos in 2017"""
        return self._action('actionScript/phobos_phun_1.ssc')
    def lunarpartial(self):
        """Partial Lunar Eclipse"""
        return self._action('actionScript/lunar_partial.ssc')
    def sun(self):
        """Sun from different planets"""
        return self._action('actionScript/sun.ssc')
    def bennett(self):
        """The Jack Bennett Catalog"""
        return self._action('actionScript/bennett.ssc')
    def morsels3(self):
        """Occultations of bright stars by planets"""
        return self._action('actionScript/morsels_3.ssc')
    def saturniananalemma(self):
        """Saturnian analemma"""
        return self._action('actionScript/saturnian_analemma.ssc')
    def binosky(self):
        """Binosky: Deep Sky Objects for Binoculars"""
        return self._action('actionScript/binosky.ssc')
    def constellationstour(self):
        """Constellations Tour"""
        return self._action('actionScript/constellations_tour.ssc')
    def landscapes(self):
        """Landscape Tour"""
        return self._action('actionScript/landscapes.ssc')
    def morsels1(self):
        """Jupiter and triple shadow phenomena"""
        return self._action('actionScript/morsels_1.ssc')
    def messiertour(self):
        """Messier Objects Tour"""
        return self._action('actionScript/messier_tour.ssc')
    def earth3(self):
        """Earth Events from a floating city on Venus"""
        return self._action('actionScript/earth_3.ssc')
    def skybox(self):
        """Skybox Tiles"""
        return self._action('actionScript/skybox.ssc')
    def startup(self):
        """Startup Script"""
        return self._action('actionScript/startup.ssc')
    def morsels2(self):
        """Jupiter without Galilean satellites"""
        return self._action('actionScript/morsels_2.ssc')
    def largestknownstars(self):
        """List of largest known stars"""
        return self._action('actionScript/largest_known_stars.ssc')
    def bestngc(self):
        """Best objects in the New General Catalog"""
        return self._action('actionScript/best_ngc.ssc')
    def supernova(self):
        """Tycho's Supernova"""
        return self._action('actionScript/supernova.ssc')
    def analemma(self):
        """Analemma"""
        return self._action('actionScript/analemma.ssc')
    def skycultures(self):
        """Sky Culture Tour"""
        return self._action('actionScript/sky_cultures.ssc')
    def phobosphun2(self):
        """Double eclipse from Deimos in 2031"""
        return self._action('actionScript/phobos_phun_2.ssc')
    def modernconstellationstour(self):
        """Modern Constellations Tour"""
        return self._action('actionScript/modern_constellations_tour.ssc')
    def binocularhighlights(self):
        """Binocular Highlights"""
        return self._action('actionScript/binocular_highlights.ssc')
    def messiermarathon(self):
        """Messier Marathon"""
        return self._action('actionScript/messier_marathon.ssc')
    def uraniananalemma(self):
        """Uranian analemma"""
        return self._action('actionScript/uranian_analemma.ssc')
    def displayInfoAll(self):
        """All available info"""
        return self._action('actionDisplayInfo_All')
    def displayInfoDefault(self):
        """Default info"""
        return self._action('actionDisplayInfo_Default')
    def displayInfoShort(self):
        """Short info"""
        return self._action('actionDisplayInfo_Short')
    def displayInfoNone(self):
        """None info"""
        return self._action('actionDisplayInfo_None')
    def displayInfoCustom(self):
        """Custom info"""
        return self._action('actionDisplayInfo_Custom')
    def showMPCImport(self):
        """Import orbital elements in MPC format..."""
        return self._action('actionShow_MPC_Import')
    def nextTransit(self):
        """Next transit of the selected object"""
        return self._action('actionNext_Transit')
    def nextRising(self):
        """Next rising of the selected object"""
        return self._action('actionNext_Rising')
    def nextSetting(self):
        """Next setting of the selected object"""
        return self._action('actionNext_Setting')
    def todayTransit(self):
        """Today's transit of the selected object"""
        return self._action('actionToday_Transit')
    def todayRising(self):
        """Today's rising of the selected object"""
        return self._action('actionToday_Rising')
    def todaySetting(self):
        """Today's setting of the selected object"""
        return self._action('actionToday_Setting')
    def previousTransit(self):
        """Previous transit of the selected object"""
        return self._action('actionPrevious_Transit')
    def previousRising(self):
        """Previous rising of the selected object"""
        return self._action('actionPrevious_Rising')
    def previousSetting(self):
        """Previous setting of the selected object"""
        return self._action('actionPrevious_Setting')
    def nextMorningTwilight(self):
        """Next morning twilight"""
        return self._action('actionNext_MorningTwilight')
    def nextEveningTwilight(self):
        """Next evening twilight"""
        return self._action('actionNext_EveningTwilight')
    def todayMorningTwilight(self):
        """Today's morning twilight"""
        return self._action('actionToday_MorningTwilight')
    def todayEveningTwilight(self):
        """Today's evening twilight"""
        return self._action('actionToday_EveningTwilight')
    def previousMorningTwilight(self):
        """Previous morning twilight"""
        return self._action('actionPrevious_MorningTwilight')
    def previousEveningTwilight(self):
        """Previous evening twilight"""
        return self._action('actionPrevious_EveningTwilight')
    def nextMorningAtAltitude(self):
        """Selected object at altitude at next morning"""
        return self._action('actionNext_MorningAtAltitude')
    def todayMorningAtAltitude(self):
        """Selected object at altitude this morning"""
        return self._action('actionToday_MorningAtAltitude')
    def previousMorningAtAltitude(self):
        """Selected object at altitude at previous morning"""
        return self._action('actionPrevious_MorningAtAltitude')
    def nextEveningAtAltitude(self):
        """Selected object at altitude at next evening"""
        return self._action('actionNext_EveningAtAltitude')
    def todayEveningAtAltitude(self):
        """Selected object at altitude this evening"""
        return self._action('actionToday_EveningAtAltitude')
    def previousEveningAtAltitude(self):
        """Selected object at altitude at previous evening"""
        return self._action('actionPrevious_EveningAtAltitude')
    def currentMarchEquinox(self):
        """March equinox at current year"""
        return self._action('actionCurrent_March_Equinox')
    def nextMarchEquinox(self):
        """March equinox at next year"""
        return self._action('actionNext_March_Equinox')
    def previousMarchEquinox(self):
        """March equinox at previous year"""
        return self._action('actionPrevious_March_Equinox')
    def currentSeptemberEquinox(self):
        """September equinox at current year"""
        return self._action('actionCurrent_September_Equinox')
    def nextSeptemberEquinox(self):
        """September equinox at next year"""
        return self._action('actionNext_September_Equinox')
    def previousSeptemberEquinox(self):
        """September equinox at previous year"""
        return self._action('actionPrevious_September_Equinox')
    def currentJuneSolstice(self):
        """June solstice at current year"""
        return self._action('actionCurrent_June_Solstice')
    def nextJuneSolstice(self):
        """June solstice at next year"""
        return self._action('actionNext_June_Solstice')
    def previousJuneSolstice(self):
        """June solstice at previous year"""
        return self._action('actionPrevious_June_Solstice')
    def currentDecemberSolstice(self):
        """December solstice at current year"""
        return self._action('actionCurrent_December_Solstice')
    def nextDecemberSolstice(self):
        """December solstice at next year"""
        return self._action('actionNext_December_Solstice')
    def previousDecemberSolstice(self):
        """December solstice at previous year"""
        return self._action('actionPrevious_December_Solstice')
    def moveTelescopeToSelection1(self):
        """Move telescope #1 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_1')
    def slewTelescopeToDirection1(self):
        """Move telescope #1 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_1')
    def syncTelescopeToSelection1(self):
        """Sync telescope #1 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_1')
    def abortSlewTelescopeSlew1(self):
        """Abort last slew command of telescope #1"""
        return self._action('actionAbortSlew_Telescope_Slew_1')
    def centeringScreenByTelescope1(self):
        """Centering screen by telescope coordinates #1"""
        return self._action('actionCentering_Screen_By_Telescope_1')
    def moveTelescopeToSelection2(self):
        """Move telescope #2 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_2')
    def slewTelescopeToDirection2(self):
        """Move telescope #2 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_2')
    def syncTelescopeToSelection2(self):
        """Sync telescope #2 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_2')
    def abortSlewTelescopeSlew2(self):
        """Abort last slew command of telescope #2"""
        return self._action('actionAbortSlew_Telescope_Slew_2')
    def centeringScreenByTelescope2(self):
        """Centering screen by telescope coordinates #2"""
        return self._action('actionCentering_Screen_By_Telescope_2')
    def moveTelescopeToSelection3(self):
        """Move telescope #3 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_3')
    def slewTelescopeToDirection3(self):
        """Move telescope #3 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_3')
    def syncTelescopeToSelection3(self):
        """Sync telescope #3 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_3')
    def abortSlewTelescopeSlew3(self):
        """Abort last slew command of telescope #3"""
        return self._action('actionAbortSlew_Telescope_Slew_3')
    def centeringScreenByTelescope3(self):
        """Centering screen by telescope coordinates #3"""
        return self._action('actionCentering_Screen_By_Telescope_3')
    def moveTelescopeToSelection4(self):
        """Move telescope #4 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_4')
    def slewTelescopeToDirection4(self):
        """Move telescope #4 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_4')
    def syncTelescopeToSelection4(self):
        """Sync telescope #4 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_4')
    def abortSlewTelescopeSlew4(self):
        """Abort last slew command of telescope #4"""
        return self._action('actionAbortSlew_Telescope_Slew_4')
    def centeringScreenByTelescope4(self):
        """Centering screen by telescope coordinates #4"""
        return self._action('actionCentering_Screen_By_Telescope_4')
    def moveTelescopeToSelection5(self):
        """Move telescope #5 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_5')
    def slewTelescopeToDirection5(self):
        """Move telescope #5 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_5')
    def syncTelescopeToSelection5(self):
        """Sync telescope #5 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_5')
    def abortSlewTelescopeSlew5(self):
        """Abort last slew command of telescope #5"""
        return self._action('actionAbortSlew_Telescope_Slew_5')
    def centeringScreenByTelescope5(self):
        """Centering screen by telescope coordinates #5"""
        return self._action('actionCentering_Screen_By_Telescope_5')
    def moveTelescopeToSelection6(self):
        """Move telescope #6 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_6')
    def slewTelescopeToDirection6(self):
        """Move telescope #6 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_6')
    def syncTelescopeToSelection6(self):
        """Sync telescope #6 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_6')
    def abortSlewTelescopeSlew6(self):
        """Abort last slew command of telescope #6"""
        return self._action('actionAbortSlew_Telescope_Slew_6')
    def centeringScreenByTelescope6(self):
        """Centering screen by telescope coordinates #6"""
        return self._action('actionCentering_Screen_By_Telescope_6')
    def moveTelescopeToSelection7(self):
        """Move telescope #7 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_7')
    def slewTelescopeToDirection7(self):
        """Move telescope #7 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_7')
    def syncTelescopeToSelection7(self):
        """Sync telescope #7 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_7')
    def abortSlewTelescopeSlew7(self):
        """Abort last slew command of telescope #7"""
        return self._action('actionAbortSlew_Telescope_Slew_7')
    def centeringScreenByTelescope7(self):
        """Centering screen by telescope coordinates #7"""
        return self._action('actionCentering_Screen_By_Telescope_7')
    def moveTelescopeToSelection8(self):
        """Move telescope #8 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_8')
    def slewTelescopeToDirection8(self):
        """Move telescope #8 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_8')
    def syncTelescopeToSelection8(self):
        """Sync telescope #8 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_8')
    def abortSlewTelescopeSlew8(self):
        """Abort last slew command of telescope #8"""
        return self._action('actionAbortSlew_Telescope_Slew_8')
    def centeringScreenByTelescope8(self):
        """Centering screen by telescope coordinates #8"""
        return self._action('actionCentering_Screen_By_Telescope_8')
    def moveTelescopeToSelection9(self):
        """Move telescope #9 to selected object"""
        return self._action('actionMove_Telescope_To_Selection_9')
    def slewTelescopeToDirection9(self):
        """Move telescope #9 to the point currently in the center of the screen"""
        return self._action('actionSlew_Telescope_To_Direction_9')
    def syncTelescopeToSelection9(self):
        """Sync telescope #9 position to selected object"""
        return self._action('actionSync_Telescope_To_Selection_9')
    def abortSlewTelescopeSlew9(self):
        """Abort last slew command of telescope #9"""
        return self._action('actionAbortSlew_Telescope_Slew_9')
    def centeringScreenByTelescope9(self):
        """Centering screen by telescope coordinates #9"""
        return self._action('actionCentering_Screen_By_Telescope_9')
    @property
    def showSlewWindow(self):
        """Move a telescope to a given set of coordinates"""
        return self._getValue('actionShow_Slew_Window')
    @showSlewWindow.setter
    def showSlewWindow(self, value):
        self._setValue('actionShow_Slew_Window')
    @property
    def showTelescopeControldialog(self):
        """Show settings dialog"""
        return self._getValue('actionShow_TelescopeControl_dialog')
    @showTelescopeControldialog.setter
    def showTelescopeControldialog(self, value):
        self._setValue('actionShow_TelescopeControl_dialog')
    @property
    def showScriptConsoleWindowGlobal(self):
        """Script console window"""
        return self._getValue('actionShow_ScriptConsole_Window_Global')
    @showScriptConsoleWindowGlobal.setter
    def showScriptConsoleWindowGlobal(self, value):
        self._setValue('actionShow_ScriptConsole_Window_Global')
    @property
    def showHelpWindowGlobal(self):
        """Help window"""
        return self._getValue('actionShow_Help_Window_Global')
    @showHelpWindowGlobal.setter
    def showHelpWindowGlobal(self, value):
        self._setValue('actionShow_Help_Window_Global')
    @property
    def showConfigurationWindowGlobal(self):
        """Configuration window"""
        return self._getValue('actionShow_Configuration_Window_Global')
    @showConfigurationWindowGlobal.setter
    def showConfigurationWindowGlobal(self, value):
        self._setValue('actionShow_Configuration_Window_Global')
    @property
    def showSearchWindowGlobal(self):
        """Search window"""
        return self._getValue('actionShow_Search_Window_Global')
    @showSearchWindowGlobal.setter
    def showSearchWindowGlobal(self, value):
        self._setValue('actionShow_Search_Window_Global')
    @property
    def showSkyViewWindowGlobal(self):
        """Sky and viewing options window"""
        return self._getValue('actionShow_SkyView_Window_Global')
    @showSkyViewWindowGlobal.setter
    def showSkyViewWindowGlobal(self, value):
        self._setValue('actionShow_SkyView_Window_Global')
    @property
    def showDateTimeWindowGlobal(self):
        """Date/time window"""
        return self._getValue('actionShow_DateTime_Window_Global')
    @showDateTimeWindowGlobal.setter
    def showDateTimeWindowGlobal(self, value):
        self._setValue('actionShow_DateTime_Window_Global')
    @property
    def showLocationWindowGlobal(self):
        """Location window"""
        return self._getValue('actionShow_Location_Window_Global')
    @showLocationWindowGlobal.setter
    def showLocationWindowGlobal(self, value):
        self._setValue('actionShow_Location_Window_Global')
    @property
    def showShortcutsWindowGlobal(self):
        """Shortcuts window"""
        return self._getValue('actionShow_Shortcuts_Window_Global')
    @showShortcutsWindowGlobal.setter
    def showShortcutsWindowGlobal(self, value):
        self._setValue('actionShow_Shortcuts_Window_Global')
    @property
    def showAstroCalcWindowGlobal(self):
        """Astronomical calculations window"""
        return self._getValue('actionShow_AstroCalc_Window_Global')
    @showAstroCalcWindowGlobal.setter
    def showAstroCalcWindowGlobal(self, value):
        self._setValue('actionShow_AstroCalc_Window_Global')
    @property
    def showObsListWindowGlobal(self):
        """Observing list"""
        return self._getValue('actionShow_ObsList_Window_Global')
    @showObsListWindowGlobal.setter
    def showObsListWindowGlobal(self, value):
        self._setValue('actionShow_ObsList_Window_Global')
